// (Lines like the one below ignore selected Clippy rules
//  - it's useful when you want to check your code with `cargo make verify`
// but some rules are too "annoying" or are not applicable for your case.)
#![allow(clippy::wildcard_imports)]

use seed::{prelude::*, *};

// ------ ------
//     Init
// ------ ------

// `init` describes what should happen when your app started.
fn init(_: Url, _: &mut impl Orders<Msg>) -> Model {
    Model {
        counter: 0,
        right_ica: String::from("brrr"),
        report_right_ica: String::from(""),
    }
}

// ------ ------
//     Model
// ------ ------

// `Model` describes our app state.
struct Model {
    counter: i32,
    right_ica: String,
    report_right_ica: String,
}

// ------ ------
//    Update
// ------ ------

// (Remove the line below once any of your `Msg` variants doesn't implement `Copy`.)
#[derive(Copy, Clone)]
// `Msg` describes the different events you can modify state with.
enum Msg {
    Increment,
    RICA,
}

// `update` describes how to handle each `Msg`.
fn update(msg: Msg, model: &mut Model, _: &mut impl Orders<Msg>) {
    match msg {
        Msg::Increment => {
            model.counter += 1;
        }
        Msg::RICA => {
            model.report_right_ica = String::from("Ho Ho");
        }
    }
}

// ------ ------
//     View
// ------ ------

// `view` describes what to display.
fn view(model: &Model) -> Vec<Node<Msg>> {
    vec![div![
        C!["columns"],
        div![
            C!["column"],
            "This is a counter: ",
            //C!["counter"],
            //        button![C!["button", "is-warning"], model.counter, ev(Ev::Click, |_| Msg::Increment),],
            button![
                C!["button", "is-warning", "cargo generate --git https://github.com/seed-rs/seed-quickstart.git --name my-project"],
                &model.right_ica,
                ev(Ev::Click, |_| Msg::RICA),
            ],
        ],
        div![C!["column"], div![" hi there"],]
    ]]
}

// ------ ------
//     Start
// ------ ------

// (This function is invoked by `init` function in `index.html`.)
#[wasm_bindgen(start)]
pub fn start() {
    // Mount the `app` to the element with the `id` "app".
    App::start("app", init, update, view);
}
